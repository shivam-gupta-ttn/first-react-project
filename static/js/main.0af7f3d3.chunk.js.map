{"version":3,"sources":["Fruits/Fruits.js","App.js","reportWebVitals.js","index.js"],"names":["fruits","props","fname","qty","onClick","deleted","App","useState","fruitState","setFruitState","userInput","inputState","setInputState","map","fruit","index","Fruits","name","quantity","fruitIndex","splice","deleteFruitHandler","type","onChange","event","target","value","split","id","console","log","addFruit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wMAoBeA,EAlBA,SAACC,GACZ,OACA,8BACI,gCAMI,+BACI,6BAAKA,EAAMC,QACX,6BAAKD,EAAME,MACX,6BAAI,wBAAQC,QAASH,EAAMI,QAAvB,8B,MCiDLC,MA1Df,WAAgB,IAAD,EACuBC,mBAAS,CAC3CP,OAAO,KAFI,mBACNQ,EADM,KACMC,EADN,OAKsBF,mBAAS,CAC1CG,UAAU,KANC,mBAKNC,EALM,KAKKC,EALL,KAqCTZ,EACF,8BACGQ,EAAWR,OAAOa,KAAI,SAACC,EAAMC,GAC5B,OAAO,cAACC,EAAD,CACPd,MAAOY,EAAMG,KACbd,IAAKW,EAAMI,SACXb,QAAS,kBAdY,SAACc,GAC1B,IAAMnB,EAAM,YAAOQ,EAAWR,QAC9BA,EAAOoB,OAAOD,EAAW,GACzBV,EAAc,CACZT,OAAQA,IAUOqB,CAAmBN,KAC3BD,EAAMG,WAKjB,OACE,gCACE,uBAAOK,KAAK,OAAOC,SA1CK,SAACC,GAC3BZ,EAAc,CACZF,UAAWc,EAAMC,OAAOC,SAwC0BA,MAAOf,EAAWD,YACpE,wBAAQN,QAAS,kBArCJ,SAACa,GAEhB,IAAIf,EAAQe,EAAKU,MAAM,KACvBlB,EAAc,CACZT,OAAO,GAAD,mBAAKQ,EAAWR,QAAhB,CAAuB,CAAC4B,GAAGX,EAAKA,KAAKf,EAAM,GAAGgB,SAAShB,EAAM,QAErEU,EAAc,CACZF,UAAU,KAEZmB,QAAQC,IAAI5B,EAAM,IAClB2B,QAAQC,IAAI5B,EAAM,IAElB2B,QAAQC,IAAItB,EAAWR,GAyBA+B,CAASpB,EAAWD,YAAzC,iBACCV,MC9CQgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0af7f3d3.chunk.js","sourcesContent":["import React from 'react';\n\nconst fruits = (props) => {\n    return (\n    <div>\n        <table>\n            {/* <tr>\n                <th>Fruit</th>\n                <th>Qty</th>\n                <th>Delete</th>\n            </tr> */}\n            <tr>\n                <td>{props.fname}</td>\n                <td>{props.qty}</td>\n                <td><button onClick={props.deleted}>Delete</button></td>\n            </tr>\n        </table>\n    </div>\n    )};\n\nexport default fruits;","import react,{ useState } from 'react';\nimport Fruits from './Fruits/Fruits';\nimport './App.css';\n\n\nfunction App() {\n  const [fruitState, setFruitState] = useState({\n    fruits:[],\n    \n  });\n  const [inputState,setInputState] = useState({\n    userInput:''\n  })\n\n  const inputChangedHandler = (event)=>{\n    setInputState({\n      userInput: event.target.value\n    });\n  }\n\n  const addFruit = (name)=>{\n    \n    var fname = name.split(\"-\");\n    setFruitState({\n      fruits:[...fruitState.fruits,{id:name,name:fname[0],quantity:fname[1]}]\n    });\n    setInputState({\n      userInput:''\n    });\n    console.log(fname[0]);\n    console.log(fname[1]);\n\n    console.log(fruitState,fruits);\n  }\n  const deleteFruitHandler = (fruitIndex)=>{\n    const fruits = [...fruitState.fruits];\n    fruits.splice(fruitIndex,1);\n    setFruitState({\n      fruits: fruits\n    });\n\n  }\n  var fruits = (\n    <div>\n      {fruitState.fruits.map((fruit,index)=>{\n        return <Fruits \n        fname={fruit.name} \n        qty={fruit.quantity}\n        deleted={()=>deleteFruitHandler(index)}\n        key={fruit.name}/>\n      })}\n    </div>\n  )\n\n  return (\n    <div>\n      <input type=\"text\" onChange={inputChangedHandler} value={inputState.userInput }/>\n      <button onClick={()=>addFruit(inputState.userInput)}>Add</button>\n      {fruits}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}